@page "/profile"
@attribute [Authorize]
@inject IAuthService _authService;
@inject NavigationManager _navManager;

<div class="px-3">
    <!-- Header Section -->
    <div class="profile-header bg-primary text-white text-center py-4">
        <div class="d-flex justify-content-center align-items-center">
            <!-- Circle with first two characters of email -->
            <div class="rounded-circle bg-white text-primary d-flex justify-content-center align-items-center" style="width: 80px; height: 80px; font-size: 30px; font-weight: bold;">
                @if (!string.IsNullOrEmpty(user.Email))
                {
                    <span>@user.Email.Substring(0, 2).ToUpper()</span>
                }
            </div>
        </div>
    </div>
    <!-- Settings Section -->
    <div class="settings-section py-4" style="display:none">
        <h3 class="text-center mb-4">Profile Settings</h3>
        <ul class="list-group">
            <li class="list-group-item">
                <a href="/edit-profile" class="text-decoration-none text-dark">Edit Profile</a>
            </li>
            <li class="list-group-item">
                <a href="/change-password" class="text-decoration-none text-dark">Change Password</a>
            </li>
            <li class="list-group-item">
                <a href="/notifications" class="text-decoration-none text-dark">Notification Preferences</a>
            </li>
            <li class="list-group-item">
                <a href="/account-security" class="text-decoration-none text-dark">Account Security</a>
            </li>
        </ul>
    </div>

    <!-- Logout Button -->
    @if (user.UserType==UserType.Guest)
    {
        
    }
    else
    {
        <div class="text-end position-absolute bottom-50 start-50 ms-5">
            <button class="btn btn-danger px-5 py-2" @onclick="Logout">Logout</button>
        </div>
    }
</div>

@code {
    private User user = new();

    protected override async Task OnInitializedAsync()
    {
        await LoadUserData();
    }

    private async Task LoadUserData()
    {
        var response = await _authService.GetCurrentUser();
        if (response.Succeeded && response.Data != null)
        {
            user = response.Data;
        }
        else
        {
            _navManager.NavigateTo("/login");
        }
    }

    private void Logout()
    {
        _authService.Logout();
        _navManager.NavigateTo("/login");
    }
}