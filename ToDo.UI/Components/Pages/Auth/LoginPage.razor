@page "/login"
@inject NavigationManager _navManager;
@inject IAuthService _authService
@inject LoadingService _loadingService
<div class="mt-5 text-white px-3">
    <div class="mt-3">
        <p class="fs-1">Login</p>
    </div>
    <div class="mt-5">
        <EditForm Model="login" OnValidSubmit="Login">
            <DataAnnotationsValidator />
            <div class="mb-3">
                <label for="email" class="form-label fs-4">Email</label>
                <InputText id="email" class="form-control bg-dark text-white py-2 fs-5" @bind-Value="login.Email" placeholder="Enter your email" />
                <ValidationMessage For="() => login.Email" class="text-danger fs-7 pt-2" />
            </div>
            <div class="mb-3">
                <label for="password" class="form-label fs-4">Password</label>
                <InputText id="password" class="form-control bg-dark text-white py-2 fs-5" @bind-Value="login.Password" type="password" placeholder="Enter your password" />
                <ValidationMessage For="() => login.Password" class="text-danger fs-7 pt-2" />
            </div>
            @if (!string.IsNullOrEmpty(errorMessage))
            {
                <span class="text-danger fs-7 pt-2">@errorMessage</span>
            }
            <div class="d-grid mt-5">
                <button type="submit" class="btn btn-primary btn-block py-2 fs-3">Login</button>
            </div>
        </EditForm>
    </div>
    <div class="text-center mt-2">
        <span class="fs-6 text-white-50">Don't have an account? </span><a href="/register">Register</a>
    </div>
</div>

@code {
    private string? errorMessage;
    private UserDTO login = new UserDTO();

    private async Task Login()
    {
        errorMessage = string.Empty;
        _loadingService.Show();
        var response= await _authService.Login(login);
        _loadingService.Hide();
        if (response.Succeeded)
        {
            _navManager.NavigateTo("/");
        }
        else
        {
            errorMessage = response.Message;
            return;
        }
    }
}