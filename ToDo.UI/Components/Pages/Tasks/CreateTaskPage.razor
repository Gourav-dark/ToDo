@page "/create-task"
@inject ITaskService _taskService
@inject ICategoryService _categoryService
@inject IAuthService _authService
@inject NavigationManager _navManager

<TaskForm TaskItem="taskItem" Categories="categories" OnTaskSaved="CreateTaskAsync" />

@code {
    private TaskItemDTO taskItem = new();
    private List<Category> categories = new();

    protected override async Task OnInitializedAsync()
    {
        var response = await _categoryService.GetAll();
        if (response.Succeeded)
        {
            categories = response.Data;
        }
    }

    private async Task CreateTaskAsync(TaskItemDTO task)
    {
        task.UserId = (await _authService.GetCurrentUser()).Data.UserId;
        var response = await _taskService.Add(task);

        if (response.Succeeded)
        {
            _navManager.NavigateTo(task.IsDailyTask ? "/dailytasks" : "/");
        }
    }
}
